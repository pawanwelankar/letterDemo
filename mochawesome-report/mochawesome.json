{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-02T06:39:58.058Z",
    "end": "2024-05-02T06:40:03.649Z",
    "duration": 5591,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "299322a8-5152-4d92-ab16-b295e3d97dfb",
      "title": "",
      "fullFile": "C:\\Users\\user\\Desktop\\Selenium practice\\Letter report testing\\test\\index.js",
      "file": "\\test\\index.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
          "title": "Verify Letter head setup",
          "fullFile": "C:\\Users\\user\\Desktop\\Selenium practice\\Letter report testing\\test\\index.js",
          "file": "\\test\\index.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Verify Letter head setup\"",
              "fullTitle": "Verify Letter head setup \"before all\" hook in \"Verify Letter head setup\"",
              "timedOut": false,
              "duration": 329,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// runs once before the first test in this block\ndriver = new webdriver.Builder().\n\twithCapabilities(webdriver.Capabilities.chrome()).build();",
              "err": {},
              "uuid": "92fd3c9e-afd1-4958-8bb3-f4feddc17b43",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Letter page open and getting title successfully ",
              "fullTitle": "Verify Letter head setup Letter page open and getting title successfully ",
              "timedOut": false,
              "duration": 4921,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('file:///C:/Users/user/Downloads/Recent%20Download/04%20Letter%20Head/sample-code/preview.html');\nvar letterOrgName = await driver.findElement(webdriver.By.className('letter-org-name'));\n\n//certificateTitleName.sendKeys('Certificate');\nawait driver.manage().setTimeouts({ implicit: 5000 });\nlet value = await letterOrgName.getText('value')\nassert.equal(value, 'YOUR COMPANY NAME');",
              "err": {},
              "uuid": "fadc9f78-826d-4057-991f-704dee62b2a4",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Letter org detailed getting successfully ",
              "fullTitle": "Verify Letter head setup Letter org detailed getting successfully ",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.manage().setTimeouts({ implicit: 5000 });\nvar letterOrgDetails = await driver.findElement(webdriver.By.className('letter-org-details'));\nawait driver.manage().setTimeouts({ implicit: 5000 });\nlet value = await letterOrgDetails.getText('value')\nreturn assert.equal(value, 'SLOGAN OF YOUR COMPANY');",
              "err": {},
              "uuid": "6c795290-ed07-49c6-8f88-05e3bd67c93c",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Letter reference number getting successfully ",
              "fullTitle": "Verify Letter head setup Letter reference number getting successfully ",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.manage().setTimeouts({ implicit: 5000 });\nvar letterReferenceNumber = await driver.findElement(webdriver.By.className('letter-ref'));\nawait driver.manage().setTimeouts({ implicit: 5000 });\nlet value = await letterReferenceNumber.getText('value')\nreturn assert.equal(value, 'Ref. No:');",
              "err": {},
              "uuid": "d601b06c-d1e9-4530-8a55-22c7efaa5d10",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Letter date getting successfully ",
              "fullTitle": "Verify Letter head setup Letter date getting successfully ",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.manage().setTimeouts({ implicit: 5000 });\nvar letterDate = await driver.findElement(webdriver.By.className('letter-date'));\nawait driver.manage().setTimeouts({ implicit: 5000 });\nlet value = await letterDate.getText('value')\nreturn assert.equal(value, 'Date:');",
              "err": {},
              "uuid": "7056fa8b-d582-4192-add6-519f7afcfadc",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Letter body getting successfully ",
              "fullTitle": "Verify Letter head setup Letter body getting successfully ",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.manage().setTimeouts({ implicit: 5000 });\nvar letterBody = await driver.findElement(webdriver.By.className('letter-body-to'));\nawait driver.manage().setTimeouts({ implicit: 5000 });\nlet value = await letterBody.getText('value')\nreturn assert.equal(value, \"To, Kiran Kshirsagar Head of the department, JSPM's RSCOE College, Tathwade,Pune-411033.\");",
              "err": {},
              "uuid": "ae048bc3-e642-4382-960a-fd5b38cc9b06",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Letter organization website getting successfully ",
              "fullTitle": "Verify Letter head setup Letter organization website getting successfully ",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.manage().setTimeouts({ implicit: 5000 });\nvar letterBody = await driver.findElement(webdriver.By.className('letter-org-website'));\nawait driver.manage().setTimeouts({ implicit: 5000 });\nlet value = await letterBody.getText('value')\nreturn assert.equal(value, \"WWW.WEBTOUCHINDIA@CO.IN\");",
              "err": {},
              "uuid": "73711525-d059-4df5-93b5-6ebb5b85bf93",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Letter organization website getting successfully ",
              "fullTitle": "Verify Letter head setup Letter organization website getting successfully ",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.manage().setTimeouts({ implicit: 5000 });\nvar letterBody = await driver.findElement(webdriver.By.className('letter-org-phone'));\nawait driver.manage().setTimeouts({ implicit: 5000 });\nlet value = await letterBody.getText('value')\nreturn assert.equal(value, \"+91 020 247335\");",
              "err": {},
              "uuid": "c902039f-d133-4bf4-abd5-ddd01a91e0f0",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Letter organization address getting successfully ",
              "fullTitle": "Verify Letter head setup Letter organization address getting successfully ",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.manage().setTimeouts({ implicit: 5000 });\nvar letterBody = await driver.findElement(webdriver.By.className('letter-org-address'));\nawait driver.manage().setTimeouts({ implicit: 5000 });\nlet value = await letterBody.getText('value')\nreturn assert.equal(value, \"Sai-Sagar,Sr no.133,Gurudwara chowk, walhekarwadi,Chinchwad,Pune-411033.\");",
              "err": {},
              "uuid": "f97b5cae-0206-4e17-bd77-cffbbfd56f82",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Letter organization address getting successfully ",
              "fullTitle": "Verify Letter head setup Letter organization address getting successfully ",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.manage().setTimeouts({ implicit: 5000 });\nvar letterBody = await driver.findElement(webdriver.By.className('letter-org-email'));\nawait driver.manage().setTimeouts({ implicit: 5000 });\nlet value = await letterBody.getText('value')\nreturn assert.equal(value, \"kiran.kshirsagar444@gmail.com\");",
              "err": {},
              "uuid": "26af95d3-5e46-4f71-a2a0-bd7ff5dd8b5b",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Post in company and name in company getting successfully ",
              "fullTitle": "Verify Letter head setup Post in company and name in company getting successfully ",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.manage().setTimeouts({ implicit: 5000 });\nvar letterOrgDetails = await driver.findElement(webdriver.By.className('letter-body-sign'));\nawait driver.manage().setTimeouts({ implicit: 5000 });\nlet value = await letterOrgDetails.getText('value')\nreturn assert.equal(value, 'Mr. ABC PQR\\n' + 'POST IN COMPANY\\n' + 'NAME OF COMPANY');",
              "err": {},
              "uuid": "b251c0cf-8f15-439b-a1b7-1e38e1d3dfc7",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that logo image should be loaded successfully",
              "fullTitle": "Verify Letter head setup Verify that logo image should be loaded successfully",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n\t\t\tconst logoElement = await driver.findElement(webdriver.By.xpath(\"//div[@class='letter-org-logo']/img\"));\n\t\t\tconst isLoaded = await logoElement.isDisplayed();\n\t\n\t\t\tassert.strictEqual(isLoaded, true, 'Logo image is not loaded successfully');\n\t        console.log('Logo image loaded successfully!');\n\t\t    } catch (error) {\n\t\t\tconsole.error('Logo image loading test failed:', error.message);\n\t\t}",
              "err": {},
              "uuid": "59842c57-e714-4ca1-ba6c-38b955ce366f",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify letter width should be present in mm",
              "fullTitle": "Verify Letter head setup Verify letter width should be present in mm",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n\t\n\t// Execute JavaScript code in the browser context to access the style sheets and CSS rules\n\tconst mmRules = await driver.executeScript(() => \n{\n\t\tconst styleSheets = document.styleSheets;\n\t\tconst mmRules = [];\n\t\n\t\t// Iterate over the style sheets\n\t\tfor (const styleSheet of styleSheets) \n\t\t{\n\t\t\t// Get the CSS rules for the style sheet\n\t\t\tconst cssRules = styleSheet.cssRules;\n\t\n\t\t\t// Iterate over the CSS rules\n\t\t\tfor (const cssRule of cssRules) \n\t\t\t{\n\t\t\t\t// Check if the CSS rule contains the class '.mm'\n\t\t\t\tif (cssRule.selectorText && cssRule.selectorText.includes('.mm')) \n\t\t\t\t{\n\t\t\t\t\tmmRules.push(cssRule.cssText);\n\t\t\t\t}\n\t\t\t}\n\t    }\n\t\treturn mmRules;\n});\n\t\n\t   // Print the matched CSS rules to the console\n\t     console.log('MM Rules:', mmRules);\n\t\n\t  // Assert that there are matched CSS rules\n\t     assert.isNotEmpty(mmRules, 'No CSS rules found for class \".mm\"');\n    } catch (error) {\n\tconsole.error('Error occurred:', error);\n}",
              "err": {},
              "uuid": "c1610f37-1cdb-42d8-a86c-cdc8c2847b23",
              "parentUUID": "2df23a02-507e-43e0-8c1c-ebeb381e6772",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fadc9f78-826d-4057-991f-704dee62b2a4",
            "6c795290-ed07-49c6-8f88-05e3bd67c93c",
            "d601b06c-d1e9-4530-8a55-22c7efaa5d10",
            "7056fa8b-d582-4192-add6-519f7afcfadc",
            "ae048bc3-e642-4382-960a-fd5b38cc9b06",
            "73711525-d059-4df5-93b5-6ebb5b85bf93",
            "c902039f-d133-4bf4-abd5-ddd01a91e0f0",
            "f97b5cae-0206-4e17-bd77-cffbbfd56f82",
            "26af95d3-5e46-4f71-a2a0-bd7ff5dd8b5b",
            "b251c0cf-8f15-439b-a1b7-1e38e1d3dfc7",
            "59842c57-e714-4ca1-ba6c-38b955ce366f",
            "c1610f37-1cdb-42d8-a86c-cdc8c2847b23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}